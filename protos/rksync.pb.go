// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/rkcloudchain/rksync/protos/rksync.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RKSyncMessage_Tag int32

const (
	RKSyncMessage_EMPTY     RKSyncMessage_Tag = 0
	RKSyncMessage_CHAN_ONLY RKSyncMessage_Tag = 1
)

var RKSyncMessage_Tag_name = map[int32]string{
	0: "EMPTY",
	1: "CHAN_ONLY",
}

var RKSyncMessage_Tag_value = map[string]int32{
	"EMPTY":     0,
	"CHAN_ONLY": 1,
}

func (x RKSyncMessage_Tag) String() string {
	return proto.EnumName(RKSyncMessage_Tag_name, int32(x))
}

func (RKSyncMessage_Tag) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cff4fef9b2151f97, []int{2, 0}
}

type Envelope struct {
	Payload              []byte   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Envelope) Reset()         { *m = Envelope{} }
func (m *Envelope) String() string { return proto.CompactTextString(m) }
func (*Envelope) ProtoMessage()    {}
func (*Envelope) Descriptor() ([]byte, []int) {
	return fileDescriptor_cff4fef9b2151f97, []int{0}
}

func (m *Envelope) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Envelope.Unmarshal(m, b)
}
func (m *Envelope) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Envelope.Marshal(b, m, deterministic)
}
func (m *Envelope) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Envelope.Merge(m, src)
}
func (m *Envelope) XXX_Size() int {
	return xxx_messageInfo_Envelope.Size(m)
}
func (m *Envelope) XXX_DiscardUnknown() {
	xxx_messageInfo_Envelope.DiscardUnknown(m)
}

var xxx_messageInfo_Envelope proto.InternalMessageInfo

func (m *Envelope) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Envelope) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type Payload struct {
	SeqNum               uint64   `protobuf:"varint,1,opt,name=seq_num,json=seqNum,proto3" json:"seq_num,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Payload) Reset()         { *m = Payload{} }
func (m *Payload) String() string { return proto.CompactTextString(m) }
func (*Payload) ProtoMessage()    {}
func (*Payload) Descriptor() ([]byte, []int) {
	return fileDescriptor_cff4fef9b2151f97, []int{1}
}

func (m *Payload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Payload.Unmarshal(m, b)
}
func (m *Payload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Payload.Marshal(b, m, deterministic)
}
func (m *Payload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payload.Merge(m, src)
}
func (m *Payload) XXX_Size() int {
	return xxx_messageInfo_Payload.Size(m)
}
func (m *Payload) XXX_DiscardUnknown() {
	xxx_messageInfo_Payload.DiscardUnknown(m)
}

var xxx_messageInfo_Payload proto.InternalMessageInfo

func (m *Payload) GetSeqNum() uint64 {
	if m != nil {
		return m.SeqNum
	}
	return 0
}

func (m *Payload) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type RKSyncMessage struct {
	Nonce   uint64            `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Channel []byte            `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Tag     RKSyncMessage_Tag `protobuf:"varint,3,opt,name=tag,proto3,enum=protos.RKSyncMessage_Tag" json:"tag,omitempty"`
	// Types that are valid to be assigned to Content:
	//	*RKSyncMessage_AliveMsg
	//	*RKSyncMessage_Empty
	//	*RKSyncMessage_Conn
	//	*RKSyncMessage_Ack
	//	*RKSyncMessage_MemReq
	//	*RKSyncMessage_MemRes
	Content              isRKSyncMessage_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RKSyncMessage) Reset()         { *m = RKSyncMessage{} }
func (m *RKSyncMessage) String() string { return proto.CompactTextString(m) }
func (*RKSyncMessage) ProtoMessage()    {}
func (*RKSyncMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_cff4fef9b2151f97, []int{2}
}

func (m *RKSyncMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RKSyncMessage.Unmarshal(m, b)
}
func (m *RKSyncMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RKSyncMessage.Marshal(b, m, deterministic)
}
func (m *RKSyncMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RKSyncMessage.Merge(m, src)
}
func (m *RKSyncMessage) XXX_Size() int {
	return xxx_messageInfo_RKSyncMessage.Size(m)
}
func (m *RKSyncMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RKSyncMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RKSyncMessage proto.InternalMessageInfo

func (m *RKSyncMessage) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *RKSyncMessage) GetChannel() []byte {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *RKSyncMessage) GetTag() RKSyncMessage_Tag {
	if m != nil {
		return m.Tag
	}
	return RKSyncMessage_EMPTY
}

type isRKSyncMessage_Content interface {
	isRKSyncMessage_Content()
}

type RKSyncMessage_AliveMsg struct {
	AliveMsg *AliveMessage `protobuf:"bytes,5,opt,name=alive_msg,json=aliveMsg,proto3,oneof"`
}

type RKSyncMessage_Empty struct {
	Empty *empty.Empty `protobuf:"bytes,6,opt,name=empty,proto3,oneof"`
}

type RKSyncMessage_Conn struct {
	Conn *ConnEstablish `protobuf:"bytes,7,opt,name=conn,proto3,oneof"`
}

type RKSyncMessage_Ack struct {
	Ack *Acknowledgement `protobuf:"bytes,8,opt,name=ack,proto3,oneof"`
}

type RKSyncMessage_MemReq struct {
	MemReq *MembershipRequest `protobuf:"bytes,9,opt,name=mem_req,json=memReq,proto3,oneof"`
}

type RKSyncMessage_MemRes struct {
	MemRes *MembershipResponse `protobuf:"bytes,10,opt,name=mem_res,json=memRes,proto3,oneof"`
}

func (*RKSyncMessage_AliveMsg) isRKSyncMessage_Content() {}

func (*RKSyncMessage_Empty) isRKSyncMessage_Content() {}

func (*RKSyncMessage_Conn) isRKSyncMessage_Content() {}

func (*RKSyncMessage_Ack) isRKSyncMessage_Content() {}

func (*RKSyncMessage_MemReq) isRKSyncMessage_Content() {}

func (*RKSyncMessage_MemRes) isRKSyncMessage_Content() {}

func (m *RKSyncMessage) GetContent() isRKSyncMessage_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *RKSyncMessage) GetAliveMsg() *AliveMessage {
	if x, ok := m.GetContent().(*RKSyncMessage_AliveMsg); ok {
		return x.AliveMsg
	}
	return nil
}

func (m *RKSyncMessage) GetEmpty() *empty.Empty {
	if x, ok := m.GetContent().(*RKSyncMessage_Empty); ok {
		return x.Empty
	}
	return nil
}

func (m *RKSyncMessage) GetConn() *ConnEstablish {
	if x, ok := m.GetContent().(*RKSyncMessage_Conn); ok {
		return x.Conn
	}
	return nil
}

func (m *RKSyncMessage) GetAck() *Acknowledgement {
	if x, ok := m.GetContent().(*RKSyncMessage_Ack); ok {
		return x.Ack
	}
	return nil
}

func (m *RKSyncMessage) GetMemReq() *MembershipRequest {
	if x, ok := m.GetContent().(*RKSyncMessage_MemReq); ok {
		return x.MemReq
	}
	return nil
}

func (m *RKSyncMessage) GetMemRes() *MembershipResponse {
	if x, ok := m.GetContent().(*RKSyncMessage_MemRes); ok {
		return x.MemRes
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RKSyncMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RKSyncMessage_AliveMsg)(nil),
		(*RKSyncMessage_Empty)(nil),
		(*RKSyncMessage_Conn)(nil),
		(*RKSyncMessage_Ack)(nil),
		(*RKSyncMessage_MemReq)(nil),
		(*RKSyncMessage_MemRes)(nil),
	}
}

type ConnEstablish struct {
	PkiId                []byte   `protobuf:"bytes,1,opt,name=pki_id,json=pkiId,proto3" json:"pki_id,omitempty"`
	Identity             []byte   `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnEstablish) Reset()         { *m = ConnEstablish{} }
func (m *ConnEstablish) String() string { return proto.CompactTextString(m) }
func (*ConnEstablish) ProtoMessage()    {}
func (*ConnEstablish) Descriptor() ([]byte, []int) {
	return fileDescriptor_cff4fef9b2151f97, []int{3}
}

func (m *ConnEstablish) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnEstablish.Unmarshal(m, b)
}
func (m *ConnEstablish) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnEstablish.Marshal(b, m, deterministic)
}
func (m *ConnEstablish) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnEstablish.Merge(m, src)
}
func (m *ConnEstablish) XXX_Size() int {
	return xxx_messageInfo_ConnEstablish.Size(m)
}
func (m *ConnEstablish) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnEstablish.DiscardUnknown(m)
}

var xxx_messageInfo_ConnEstablish proto.InternalMessageInfo

func (m *ConnEstablish) GetPkiId() []byte {
	if m != nil {
		return m.PkiId
	}
	return nil
}

func (m *ConnEstablish) GetIdentity() []byte {
	if m != nil {
		return m.Identity
	}
	return nil
}

type AliveMessage struct {
	Membership           *Member   `protobuf:"bytes,1,opt,name=membership,proto3" json:"membership,omitempty"`
	Timestamp            *PeerTime `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Identity             []byte    `protobuf:"bytes,3,opt,name=identity,proto3" json:"identity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AliveMessage) Reset()         { *m = AliveMessage{} }
func (m *AliveMessage) String() string { return proto.CompactTextString(m) }
func (*AliveMessage) ProtoMessage()    {}
func (*AliveMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_cff4fef9b2151f97, []int{4}
}

func (m *AliveMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AliveMessage.Unmarshal(m, b)
}
func (m *AliveMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AliveMessage.Marshal(b, m, deterministic)
}
func (m *AliveMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AliveMessage.Merge(m, src)
}
func (m *AliveMessage) XXX_Size() int {
	return xxx_messageInfo_AliveMessage.Size(m)
}
func (m *AliveMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_AliveMessage.DiscardUnknown(m)
}

var xxx_messageInfo_AliveMessage proto.InternalMessageInfo

func (m *AliveMessage) GetMembership() *Member {
	if m != nil {
		return m.Membership
	}
	return nil
}

func (m *AliveMessage) GetTimestamp() *PeerTime {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *AliveMessage) GetIdentity() []byte {
	if m != nil {
		return m.Identity
	}
	return nil
}

type PeerTime struct {
	IncNum               uint64   `protobuf:"varint,1,opt,name=inc_num,json=incNum,proto3" json:"inc_num,omitempty"`
	SeqNum               uint64   `protobuf:"varint,2,opt,name=seq_num,json=seqNum,proto3" json:"seq_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerTime) Reset()         { *m = PeerTime{} }
func (m *PeerTime) String() string { return proto.CompactTextString(m) }
func (*PeerTime) ProtoMessage()    {}
func (*PeerTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_cff4fef9b2151f97, []int{5}
}

func (m *PeerTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerTime.Unmarshal(m, b)
}
func (m *PeerTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerTime.Marshal(b, m, deterministic)
}
func (m *PeerTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerTime.Merge(m, src)
}
func (m *PeerTime) XXX_Size() int {
	return xxx_messageInfo_PeerTime.Size(m)
}
func (m *PeerTime) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerTime.DiscardUnknown(m)
}

var xxx_messageInfo_PeerTime proto.InternalMessageInfo

func (m *PeerTime) GetIncNum() uint64 {
	if m != nil {
		return m.IncNum
	}
	return 0
}

func (m *PeerTime) GetSeqNum() uint64 {
	if m != nil {
		return m.SeqNum
	}
	return 0
}

type Member struct {
	Endpoint             string   `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	PkiId                []byte   `protobuf:"bytes,2,opt,name=pki_id,json=pkiId,proto3" json:"pki_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Member) Reset()         { *m = Member{} }
func (m *Member) String() string { return proto.CompactTextString(m) }
func (*Member) ProtoMessage()    {}
func (*Member) Descriptor() ([]byte, []int) {
	return fileDescriptor_cff4fef9b2151f97, []int{6}
}

func (m *Member) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Member.Unmarshal(m, b)
}
func (m *Member) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Member.Marshal(b, m, deterministic)
}
func (m *Member) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Member.Merge(m, src)
}
func (m *Member) XXX_Size() int {
	return xxx_messageInfo_Member.Size(m)
}
func (m *Member) XXX_DiscardUnknown() {
	xxx_messageInfo_Member.DiscardUnknown(m)
}

var xxx_messageInfo_Member proto.InternalMessageInfo

func (m *Member) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *Member) GetPkiId() []byte {
	if m != nil {
		return m.PkiId
	}
	return nil
}

type Acknowledgement struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Acknowledgement) Reset()         { *m = Acknowledgement{} }
func (m *Acknowledgement) String() string { return proto.CompactTextString(m) }
func (*Acknowledgement) ProtoMessage()    {}
func (*Acknowledgement) Descriptor() ([]byte, []int) {
	return fileDescriptor_cff4fef9b2151f97, []int{7}
}

func (m *Acknowledgement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Acknowledgement.Unmarshal(m, b)
}
func (m *Acknowledgement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Acknowledgement.Marshal(b, m, deterministic)
}
func (m *Acknowledgement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Acknowledgement.Merge(m, src)
}
func (m *Acknowledgement) XXX_Size() int {
	return xxx_messageInfo_Acknowledgement.Size(m)
}
func (m *Acknowledgement) XXX_DiscardUnknown() {
	xxx_messageInfo_Acknowledgement.DiscardUnknown(m)
}

var xxx_messageInfo_Acknowledgement proto.InternalMessageInfo

func (m *Acknowledgement) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type MembershipRequest struct {
	SelfInformation      *Envelope `protobuf:"bytes,1,opt,name=self_information,json=selfInformation,proto3" json:"self_information,omitempty"`
	Known                [][]byte  `protobuf:"bytes,2,rep,name=known,proto3" json:"known,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MembershipRequest) Reset()         { *m = MembershipRequest{} }
func (m *MembershipRequest) String() string { return proto.CompactTextString(m) }
func (*MembershipRequest) ProtoMessage()    {}
func (*MembershipRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cff4fef9b2151f97, []int{8}
}

func (m *MembershipRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MembershipRequest.Unmarshal(m, b)
}
func (m *MembershipRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MembershipRequest.Marshal(b, m, deterministic)
}
func (m *MembershipRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MembershipRequest.Merge(m, src)
}
func (m *MembershipRequest) XXX_Size() int {
	return xxx_messageInfo_MembershipRequest.Size(m)
}
func (m *MembershipRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MembershipRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MembershipRequest proto.InternalMessageInfo

func (m *MembershipRequest) GetSelfInformation() *Envelope {
	if m != nil {
		return m.SelfInformation
	}
	return nil
}

func (m *MembershipRequest) GetKnown() [][]byte {
	if m != nil {
		return m.Known
	}
	return nil
}

type MembershipResponse struct {
	Alive                []*Envelope `protobuf:"bytes,1,rep,name=alive,proto3" json:"alive,omitempty"`
	Dead                 []*Envelope `protobuf:"bytes,2,rep,name=dead,proto3" json:"dead,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MembershipResponse) Reset()         { *m = MembershipResponse{} }
func (m *MembershipResponse) String() string { return proto.CompactTextString(m) }
func (*MembershipResponse) ProtoMessage()    {}
func (*MembershipResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cff4fef9b2151f97, []int{9}
}

func (m *MembershipResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MembershipResponse.Unmarshal(m, b)
}
func (m *MembershipResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MembershipResponse.Marshal(b, m, deterministic)
}
func (m *MembershipResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MembershipResponse.Merge(m, src)
}
func (m *MembershipResponse) XXX_Size() int {
	return xxx_messageInfo_MembershipResponse.Size(m)
}
func (m *MembershipResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MembershipResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MembershipResponse proto.InternalMessageInfo

func (m *MembershipResponse) GetAlive() []*Envelope {
	if m != nil {
		return m.Alive
	}
	return nil
}

func (m *MembershipResponse) GetDead() []*Envelope {
	if m != nil {
		return m.Dead
	}
	return nil
}

func init() {
	proto.RegisterEnum("protos.RKSyncMessage_Tag", RKSyncMessage_Tag_name, RKSyncMessage_Tag_value)
	proto.RegisterType((*Envelope)(nil), "protos.Envelope")
	proto.RegisterType((*Payload)(nil), "protos.Payload")
	proto.RegisterType((*RKSyncMessage)(nil), "protos.RKSyncMessage")
	proto.RegisterType((*ConnEstablish)(nil), "protos.ConnEstablish")
	proto.RegisterType((*AliveMessage)(nil), "protos.AliveMessage")
	proto.RegisterType((*PeerTime)(nil), "protos.PeerTime")
	proto.RegisterType((*Member)(nil), "protos.Member")
	proto.RegisterType((*Acknowledgement)(nil), "protos.Acknowledgement")
	proto.RegisterType((*MembershipRequest)(nil), "protos.MembershipRequest")
	proto.RegisterType((*MembershipResponse)(nil), "protos.MembershipResponse")
}

func init() {
	proto.RegisterFile("github.com/rkcloudchain/rksync/protos/rksync.proto", fileDescriptor_cff4fef9b2151f97)
}

var fileDescriptor_cff4fef9b2151f97 = []byte{
	// 720 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x5d, 0x8f, 0xda, 0x46,
	0x14, 0xc5, 0xcb, 0xa7, 0xef, 0x66, 0x13, 0x3a, 0x4a, 0x1a, 0x97, 0x56, 0x2a, 0xb2, 0xda, 0x06,
	0x29, 0x92, 0xa9, 0x48, 0x1b, 0x55, 0x4a, 0x5f, 0x42, 0x84, 0x44, 0xd4, 0xb2, 0x45, 0x0e, 0x2f,
	0xe9, 0x0b, 0x1a, 0xec, 0x8b, 0x19, 0xe1, 0x99, 0x31, 0x9e, 0x21, 0x15, 0xfd, 0x09, 0xfd, 0x5d,
	0xfd, 0x61, 0xd5, 0x8c, 0x6d, 0x16, 0xc2, 0xae, 0xd4, 0x27, 0x38, 0x73, 0xcf, 0xb9, 0x73, 0xe6,
	0x7e, 0x18, 0x46, 0x09, 0xd3, 0x9b, 0xfd, 0x2a, 0x88, 0x24, 0x1f, 0xe6, 0xdb, 0x28, 0x95, 0xfb,
	0x38, 0xda, 0x50, 0x26, 0x86, 0xf9, 0x56, 0x1d, 0x44, 0x34, 0xcc, 0x72, 0xa9, 0xa5, 0x2a, 0x51,
	0x60, 0x11, 0x69, 0x15, 0x87, 0xbd, 0xaf, 0x13, 0x29, 0x93, 0x14, 0x0b, 0xce, 0x6a, 0xbf, 0x1e,
	0x22, 0xcf, 0xf4, 0xa1, 0x20, 0xf9, 0x63, 0xe8, 0x4c, 0xc4, 0x27, 0x4c, 0x65, 0x86, 0xc4, 0x83,
	0x76, 0x46, 0x0f, 0xa9, 0xa4, 0xb1, 0xe7, 0xf4, 0x9d, 0xc1, 0xa3, 0xb0, 0x82, 0xe4, 0x1b, 0x70,
	0x15, 0x4b, 0x04, 0xd5, 0xfb, 0x1c, 0xbd, 0x2b, 0x1b, 0xbb, 0x3b, 0xf0, 0x5f, 0x43, 0x7b, 0x5e,
	0x12, 0x9f, 0x43, 0x5b, 0xe1, 0x6e, 0x29, 0xf6, 0xdc, 0xa6, 0x68, 0x84, 0x2d, 0x85, 0xbb, 0xdb,
	0x3d, 0x27, 0x04, 0x1a, 0x31, 0xd5, 0xb4, 0x14, 0xdb, 0xff, 0xfe, 0xbf, 0x75, 0xb8, 0x09, 0x7f,
	0xfb, 0x70, 0x10, 0xd1, 0x0c, 0x95, 0xa2, 0x09, 0x92, 0xa7, 0xd0, 0x14, 0x52, 0x44, 0x58, 0x8a,
	0x0b, 0x60, 0x7c, 0x45, 0x1b, 0x2a, 0x04, 0xa6, 0xa5, 0xbc, 0x82, 0xe4, 0x25, 0xd4, 0x35, 0x4d,
	0xbc, 0x7a, 0xdf, 0x19, 0x3c, 0x1e, 0x7d, 0x55, 0x3c, 0x49, 0x05, 0x67, 0x39, 0x83, 0x05, 0x4d,
	0x42, 0xc3, 0x22, 0xaf, 0xc0, 0xa5, 0x29, 0xfb, 0x84, 0x4b, 0xae, 0x12, 0xaf, 0xd9, 0x77, 0x06,
	0xd7, 0xa3, 0xa7, 0x95, 0xe4, 0xad, 0x09, 0x94, 0x8a, 0x69, 0x2d, 0xec, 0x58, 0xe2, 0x4c, 0x25,
	0x24, 0x80, 0xa6, 0x2d, 0x97, 0xd7, 0xb2, 0x82, 0x2f, 0x83, 0xa2, 0x98, 0x41, 0x55, 0xcc, 0x60,
	0x62, 0xa2, 0xd3, 0x5a, 0x58, 0xd0, 0xc8, 0x4b, 0x68, 0x44, 0x52, 0x08, 0xaf, 0x6d, 0xe9, 0xcf,
	0xaa, 0xfc, 0xef, 0xa4, 0x10, 0x13, 0xa5, 0xe9, 0x2a, 0x65, 0x6a, 0x33, 0xad, 0x85, 0x96, 0x64,
	0xec, 0xd3, 0x68, 0xeb, 0x75, 0x2c, 0xf7, 0xf9, 0xd1, 0x4b, 0xb4, 0x15, 0xf2, 0xaf, 0x14, 0xe3,
	0x04, 0x39, 0x0a, 0x3d, 0xad, 0x85, 0x86, 0x45, 0x7e, 0x82, 0x36, 0x47, 0xbe, 0xcc, 0x71, 0xe7,
	0xb9, 0x56, 0x70, 0x7c, 0xef, 0x0c, 0xf9, 0x0a, 0x73, 0xb5, 0x61, 0x59, 0x88, 0xbb, 0x3d, 0x2a,
	0x23, 0x69, 0x71, 0xe4, 0x21, 0xee, 0xc8, 0xcf, 0x95, 0x4a, 0x79, 0x60, 0x55, 0xbd, 0xfb, 0x54,
	0x2a, 0x93, 0x42, 0xe1, 0x51, 0xa6, 0xfc, 0x6f, 0xa1, 0xbe, 0xa0, 0x09, 0x71, 0xa1, 0x39, 0x99,
	0xcd, 0x17, 0x1f, 0xbb, 0x35, 0x72, 0x03, 0xee, 0xbb, 0xe9, 0xdb, 0xdb, 0xe5, 0x1f, 0xb7, 0xbf,
	0x7f, 0xec, 0x3a, 0x63, 0x17, 0xda, 0x91, 0x14, 0x1a, 0x85, 0xf6, 0xc7, 0x70, 0x73, 0xf6, 0x3c,
	0xf2, 0x0c, 0x5a, 0xd9, 0x96, 0x2d, 0x59, 0x35, 0x46, 0xcd, 0x6c, 0xcb, 0xde, 0xc7, 0xa4, 0x07,
	0x1d, 0x16, 0xa3, 0xd0, 0x4c, 0x1f, 0xca, 0x3e, 0x1e, 0xb1, 0xff, 0x8f, 0x03, 0x8f, 0x4e, 0x7b,
	0x40, 0x02, 0x00, 0x7e, 0x34, 0x68, 0xf3, 0x5c, 0x8f, 0x1e, 0x9f, 0x5b, 0x0f, 0x4f, 0x18, 0x24,
	0x00, 0x57, 0x33, 0x8e, 0x4a, 0x53, 0x9e, 0xd9, 0xec, 0xd7, 0xa3, 0x6e, 0x45, 0x9f, 0x23, 0xe6,
	0x0b, 0xc6, 0x31, 0xbc, 0xa3, 0x9c, 0x99, 0xa9, 0x7f, 0x66, 0xe6, 0x57, 0xe8, 0x54, 0x12, 0x33,
	0xd0, 0x4c, 0x44, 0xa7, 0x03, 0xcd, 0x44, 0x64, 0x06, 0xfa, 0x64, 0xd2, 0xaf, 0x4e, 0x27, 0xdd,
	0x7f, 0x03, 0xad, 0xc2, 0x9f, 0xb9, 0x03, 0x45, 0x9c, 0x49, 0x26, 0xb4, 0x15, 0xbb, 0xe1, 0x11,
	0x9f, 0xd4, 0xe8, 0xea, 0xa4, 0x46, 0xfe, 0x0b, 0x78, 0xf2, 0x59, 0xfb, 0xcd, 0x4e, 0x60, 0x9e,
	0xcb, 0xbc, 0x4c, 0x51, 0x00, 0x7f, 0x0d, 0x5f, 0x5c, 0xb4, 0x9d, 0xbc, 0x81, 0xae, 0xc2, 0x74,
	0xbd, 0x64, 0x62, 0x2d, 0x73, 0x4e, 0x35, 0x93, 0xa2, 0x2c, 0xdd, 0xb1, 0x16, 0xd5, 0xb2, 0x87,
	0x4f, 0x0c, 0xf3, 0xfd, 0x1d, 0xd1, 0xdc, 0x63, 0x2e, 0x16, 0xde, 0x55, 0xbf, 0x6e, 0x0c, 0x59,
	0xe0, 0xaf, 0x80, 0x5c, 0x0e, 0x0a, 0xf9, 0x01, 0x9a, 0x76, 0x43, 0x3c, 0xa7, 0x5f, 0xbf, 0x37,
	0x7b, 0x11, 0x26, 0xdf, 0x41, 0x23, 0x46, 0x1a, 0xdb, 0x94, 0xf7, 0xd1, 0x6c, 0x74, 0xf4, 0x37,
	0xb4, 0x8a, 0x95, 0x25, 0xaf, 0x01, 0xcc, 0xef, 0x07, 0x9d, 0x23, 0xe5, 0xe4, 0x82, 0xdf, 0xbb,
	0x38, 0xf1, 0x6b, 0x03, 0xe7, 0x47, 0x87, 0xfc, 0x02, 0x8d, 0x39, 0x13, 0x09, 0x79, 0x60, 0x3d,
	0x7b, 0x0f, 0x9c, 0xfb, 0xb5, 0xf1, 0x8b, 0x3f, 0xbf, 0xff, 0x5f, 0x9f, 0xd6, 0x55, 0xf1, 0x35,
	0x7d, 0xf5, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xea, 0x14, 0x13, 0xdf, 0x8a, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RKSyncClient is the client API for RKSync service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RKSyncClient interface {
	// SyncStream is the gRPC stream used for sending and receiving messages
	SyncStream(ctx context.Context, opts ...grpc.CallOption) (RKSync_SyncStreamClient, error)
	// Ping is used to probe a remote peer's aliveness
	Ping(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
}

type rKSyncClient struct {
	cc *grpc.ClientConn
}

func NewRKSyncClient(cc *grpc.ClientConn) RKSyncClient {
	return &rKSyncClient{cc}
}

func (c *rKSyncClient) SyncStream(ctx context.Context, opts ...grpc.CallOption) (RKSync_SyncStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RKSync_serviceDesc.Streams[0], "/protos.RKSync/SyncStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &rKSyncSyncStreamClient{stream}
	return x, nil
}

type RKSync_SyncStreamClient interface {
	Send(*Envelope) error
	Recv() (*Envelope, error)
	grpc.ClientStream
}

type rKSyncSyncStreamClient struct {
	grpc.ClientStream
}

func (x *rKSyncSyncStreamClient) Send(m *Envelope) error {
	return x.ClientStream.SendMsg(m)
}

func (x *rKSyncSyncStreamClient) Recv() (*Envelope, error) {
	m := new(Envelope)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rKSyncClient) Ping(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/protos.RKSync/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RKSyncServer is the server API for RKSync service.
type RKSyncServer interface {
	// SyncStream is the gRPC stream used for sending and receiving messages
	SyncStream(RKSync_SyncStreamServer) error
	// Ping is used to probe a remote peer's aliveness
	Ping(context.Context, *empty.Empty) (*empty.Empty, error)
}

func RegisterRKSyncServer(s *grpc.Server, srv RKSyncServer) {
	s.RegisterService(&_RKSync_serviceDesc, srv)
}

func _RKSync_SyncStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RKSyncServer).SyncStream(&rKSyncSyncStreamServer{stream})
}

type RKSync_SyncStreamServer interface {
	Send(*Envelope) error
	Recv() (*Envelope, error)
	grpc.ServerStream
}

type rKSyncSyncStreamServer struct {
	grpc.ServerStream
}

func (x *rKSyncSyncStreamServer) Send(m *Envelope) error {
	return x.ServerStream.SendMsg(m)
}

func (x *rKSyncSyncStreamServer) Recv() (*Envelope, error) {
	m := new(Envelope)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _RKSync_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RKSyncServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.RKSync/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RKSyncServer).Ping(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _RKSync_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.RKSync",
	HandlerType: (*RKSyncServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _RKSync_Ping_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SyncStream",
			Handler:       _RKSync_SyncStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "github.com/rkcloudchain/rksync/protos/rksync.proto",
}
